name: Update Docs

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false

    steps:
    - uses: actions/checkout@v3
    
    - name: Checkout submodules
      run: git submodule update --init --recursive
    
    - name: Install Clang
      run: wget https://apt.llvm.org/llvm.sh && chmod +x llvm.sh && sudo ./llvm.sh 14 && sudo apt-get -y install clang-tidy-14

    - name: Install Criterion
      run: sudo add-apt-repository -y ppa:snaipewastaken/ppa && sudo apt-get update && sudo apt-get -y install criterion-dev

    - name: Install Doxygen
      working-directory: ${{github.workspace}}
      run: sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test && sudo apt-get update && sudo apt-get -y install doxygen python flex bison && git clone https://github.com/doxygen/doxygen.git && cd doxygen && cmake -B build -DCMAKE_BUILD_TYPE=Release -G "Unix Makefiles" && cmake --build build && cd build && sudo make install
      
    - name: Install graphviz
      run: sudo apt-get -y install graphviz
    
    - name: Install libgs
      run: sudo apt-get -y install libgs9 libgs9-common

    - name: Configure CMake
      env:
        CC: clang-14
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_C_CLANG_TIDY=clang-tidy-14
      
    - name: Configure Python
      run: sudo apt-get -y install python3 && sudo pip3 install pygments
      
    - name: Configure Docs Theme
      run: cp m-theme-dark.css third-party/m.css/css -f && cp pygments-dark.py third-party/m.css/css -f && cp pygments-dark.css third-party/m.css/css -f && cd third-party/m.css/css && python3 postprocess.py m-dark.css m-documentation.css -o m-dark+documentation.compiled.css && python3 postprocess.py m-dark.css m-documentation.css --no-import -o m-dark.documentation.compiled.css

    - name: Build
      env:
        CC: clang-14
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --target Doxygen

    - name: Push Docs
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      uses: s0/git-publish-subdir-action@develop
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        REPO: self
        BRANCH: gh-pages
        FOLDER: docs/html
